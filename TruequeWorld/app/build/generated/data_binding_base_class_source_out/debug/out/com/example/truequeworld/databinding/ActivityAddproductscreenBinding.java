// Generated by view binder compiler. Do not edit!
package com.example.truequeworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.truequeworld.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddproductscreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView addphoto;

  @NonNull
  public final MaterialButton buttonAAdir;

  @NonNull
  public final MaterialButton buttonPublicar;

  @NonNull
  public final TextInputEditText categoryField;

  @NonNull
  public final ImageButton closeRegisterButton;

  @NonNull
  public final TextInputEditText estadoField;

  @NonNull
  public final Guideline h1;

  @NonNull
  public final Guideline h10;

  @NonNull
  public final Guideline h2;

  @NonNull
  public final Guideline h3;

  @NonNull
  public final Guideline h4;

  @NonNull
  public final Guideline h5;

  @NonNull
  public final Guideline h6;

  @NonNull
  public final Guideline h7;

  @NonNull
  public final Guideline h8;

  @NonNull
  public final Guideline h9;

  @NonNull
  public final EditText newtitle;

  @NonNull
  public final TextInputEditText priceField;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final Guideline v1;

  @NonNull
  public final Guideline v2;

  @NonNull
  public final Guideline v3;

  @NonNull
  public final Guideline v4;

  @NonNull
  public final Guideline v5;

  @NonNull
  public final Guideline v6;

  @NonNull
  public final View view;

  private ActivityAddproductscreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView addphoto, @NonNull MaterialButton buttonAAdir,
      @NonNull MaterialButton buttonPublicar, @NonNull TextInputEditText categoryField,
      @NonNull ImageButton closeRegisterButton, @NonNull TextInputEditText estadoField,
      @NonNull Guideline h1, @NonNull Guideline h10, @NonNull Guideline h2, @NonNull Guideline h3,
      @NonNull Guideline h4, @NonNull Guideline h5, @NonNull Guideline h6, @NonNull Guideline h7,
      @NonNull Guideline h8, @NonNull Guideline h9, @NonNull EditText newtitle,
      @NonNull TextInputEditText priceField, @NonNull TextInputLayout textInputLayout,
      @NonNull TextView textView, @NonNull TextView textView2, @NonNull Guideline v1,
      @NonNull Guideline v2, @NonNull Guideline v3, @NonNull Guideline v4, @NonNull Guideline v5,
      @NonNull Guideline v6, @NonNull View view) {
    this.rootView = rootView;
    this.addphoto = addphoto;
    this.buttonAAdir = buttonAAdir;
    this.buttonPublicar = buttonPublicar;
    this.categoryField = categoryField;
    this.closeRegisterButton = closeRegisterButton;
    this.estadoField = estadoField;
    this.h1 = h1;
    this.h10 = h10;
    this.h2 = h2;
    this.h3 = h3;
    this.h4 = h4;
    this.h5 = h5;
    this.h6 = h6;
    this.h7 = h7;
    this.h8 = h8;
    this.h9 = h9;
    this.newtitle = newtitle;
    this.priceField = priceField;
    this.textInputLayout = textInputLayout;
    this.textView = textView;
    this.textView2 = textView2;
    this.v1 = v1;
    this.v2 = v2;
    this.v3 = v3;
    this.v4 = v4;
    this.v5 = v5;
    this.v6 = v6;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddproductscreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddproductscreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addproductscreen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddproductscreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addphoto;
      ImageView addphoto = ViewBindings.findChildViewById(rootView, id);
      if (addphoto == null) {
        break missingId;
      }

      id = R.id.button_a√±adir;
      MaterialButton buttonAAdir = ViewBindings.findChildViewById(rootView, id);
      if (buttonAAdir == null) {
        break missingId;
      }

      id = R.id.button_publicar;
      MaterialButton buttonPublicar = ViewBindings.findChildViewById(rootView, id);
      if (buttonPublicar == null) {
        break missingId;
      }

      id = R.id.category_field;
      TextInputEditText categoryField = ViewBindings.findChildViewById(rootView, id);
      if (categoryField == null) {
        break missingId;
      }

      id = R.id.close_register_button;
      ImageButton closeRegisterButton = ViewBindings.findChildViewById(rootView, id);
      if (closeRegisterButton == null) {
        break missingId;
      }

      id = R.id.estado_field;
      TextInputEditText estadoField = ViewBindings.findChildViewById(rootView, id);
      if (estadoField == null) {
        break missingId;
      }

      id = R.id.h1;
      Guideline h1 = ViewBindings.findChildViewById(rootView, id);
      if (h1 == null) {
        break missingId;
      }

      id = R.id.h10;
      Guideline h10 = ViewBindings.findChildViewById(rootView, id);
      if (h10 == null) {
        break missingId;
      }

      id = R.id.h2;
      Guideline h2 = ViewBindings.findChildViewById(rootView, id);
      if (h2 == null) {
        break missingId;
      }

      id = R.id.h3;
      Guideline h3 = ViewBindings.findChildViewById(rootView, id);
      if (h3 == null) {
        break missingId;
      }

      id = R.id.h4;
      Guideline h4 = ViewBindings.findChildViewById(rootView, id);
      if (h4 == null) {
        break missingId;
      }

      id = R.id.h5;
      Guideline h5 = ViewBindings.findChildViewById(rootView, id);
      if (h5 == null) {
        break missingId;
      }

      id = R.id.h6;
      Guideline h6 = ViewBindings.findChildViewById(rootView, id);
      if (h6 == null) {
        break missingId;
      }

      id = R.id.h7;
      Guideline h7 = ViewBindings.findChildViewById(rootView, id);
      if (h7 == null) {
        break missingId;
      }

      id = R.id.h8;
      Guideline h8 = ViewBindings.findChildViewById(rootView, id);
      if (h8 == null) {
        break missingId;
      }

      id = R.id.h9;
      Guideline h9 = ViewBindings.findChildViewById(rootView, id);
      if (h9 == null) {
        break missingId;
      }

      id = R.id.newtitle;
      EditText newtitle = ViewBindings.findChildViewById(rootView, id);
      if (newtitle == null) {
        break missingId;
      }

      id = R.id.price_field;
      TextInputEditText priceField = ViewBindings.findChildViewById(rootView, id);
      if (priceField == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.v1;
      Guideline v1 = ViewBindings.findChildViewById(rootView, id);
      if (v1 == null) {
        break missingId;
      }

      id = R.id.v2;
      Guideline v2 = ViewBindings.findChildViewById(rootView, id);
      if (v2 == null) {
        break missingId;
      }

      id = R.id.v3;
      Guideline v3 = ViewBindings.findChildViewById(rootView, id);
      if (v3 == null) {
        break missingId;
      }

      id = R.id.v4;
      Guideline v4 = ViewBindings.findChildViewById(rootView, id);
      if (v4 == null) {
        break missingId;
      }

      id = R.id.v5;
      Guideline v5 = ViewBindings.findChildViewById(rootView, id);
      if (v5 == null) {
        break missingId;
      }

      id = R.id.v6;
      Guideline v6 = ViewBindings.findChildViewById(rootView, id);
      if (v6 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ActivityAddproductscreenBinding((ConstraintLayout) rootView, addphoto, buttonAAdir,
          buttonPublicar, categoryField, closeRegisterButton, estadoField, h1, h10, h2, h3, h4, h5,
          h6, h7, h8, h9, newtitle, priceField, textInputLayout, textView, textView2, v1, v2, v3,
          v4, v5, v6, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
